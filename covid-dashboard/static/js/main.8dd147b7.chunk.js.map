{"version":3,"sources":["services/cache.js","api/covid.js","api/flags.js","constants/filters.js","components/summary/tdItem.js","components/summary/table.js","services/calculations.js","icons/small.svg","icons/plus.svg","icons/expand.svg","components/summary/index.js","constants/missed.js","services/sorting.js","services/selectFilters.js","icons/keypad.svg","components/filters/index.js","components/countryList/index.js","components/worldMap/map/tooltip.js","components/worldMap/map/legend.js","icons/plus_map.svg","icons/minus_map.svg","components/worldMap/map/index.js","components/worldMap/index.js","components/graph/chart/index.js","components/graph/index.js","components/root/index.js","index.js"],"names":["setCache","cacheName","cacheValue","sessionStorage","setItem","JSON","stringify","getCache","cache","getItem","parse","BASE_URL","getDataCountryFromDays","country_slug","a","split","join","endPointCountries","axios","get","summaries","data","map","el","TotalConfirmed","Confirmed","TotalDeaths","Deaths","TotalRecovered","Recovered","getDataWorldFromDays","sort","b","date","Date","index","addDays","toDateString","getSummaries","getFlags","flags","filters","confirmed","deaths","recovered","all","lastDay","absolute","to100men","allowedNew","allowedTotal","TdItem","value","thNames","aria-label","Table","tableName","current","currentCountryTitle","userLang","navigator","language","items","Object","values","className","scope","i","Intl","NumberFormat","minimumFractionDigits","maximumFractionDigits","format","populationWorld","calc100Men","population","Math","round","NewConfirmed","NewDeaths","NewRecovered","getData","result","currentDate","status","length","endOfToday","replace","relative","geography","getColorsFromFilters","color","getFilterName","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","id","stroke","strokeWidth","fill","fillRule","transform","points","SvgSmall","_ref","svgRef","title","titleId","props","width","height","viewBox","xmlns","xmlnsXlink","ref","undefined","ForwardRef","d","SvgPlus","SvgExpand","Summary","handleMaximize","setState","fullSize","state","maximize","minimize","currentCountryObj","getByCountry","summariesCountries","getBySelect","currentTotal","currentCountry","defaultCountryTitle","defaultPosition","x","y","expanded","populationCountry","checkedAbsolute","checkedPer100k","checkedAll","checkedLastday","bind","handlePer100kChange","handleAbsoluteChange","handleLastDayChange","handleAllChange","countries","findCountry","filter","Country","find","object","allowed","includes","reduce","obj","e","countrySelected","globalFilters","per100k","totalObj","summariesSelect","countryObj","updateFilters","period","per100kTotal","per100kCountry","prevProps","position","onMouseDown","handleOnMouseUp","onClick","style","display","handleMinimize","handleFullSize","type","checked","onChange","React","Component","memo","missedFlags","missedPopulations","sortByParameter","parameter","getSortedBy","sortedBy","idx","SvgKeypad","Filters","options","dataForCountry","onRadioChangeRelative","onRadioChangePeriod","sortParameters","CountryList","onInputChange","filterText","onCountryClick","handleClickOnCountry","listRef","createRef","tbodyRef","containerRef","initKeyboard","prevState","snapshot","sortedByObj","country","TotalConfirmedPerPopulation","NewConfirmedPerPopulation","TotalDeathsPerPopulation","NewDeathsPerPopulation","TotalRecoveredPerPopulation","NewRecoveredPerPopulation","countryIdx","findIndex","children","scrollIntoView","behavior","block","scrollToActive","item","flag","amount","loading","src","alt","searchInput","document","getElementById","window","VKeyboard","init","keyboardToggle","name","toLowerCase","listItems","makeList","onFocus","placeholder","openKeyboard","Tooltip","dataCountry","customStyles","roundDijit","Data","toFixed","Legend","diffCoeff","useState","setExpanded","setFullSize","setMinimize","setMaximize","colSpan","backgroundColor","SvgPlusMap","SvgMinusMap","Map","selectedCountries","setSelectedCountries","setStyle","setDataCountry","scaleIndex","setScaleIndex","legend","updateLegend","updateDiffCoeff","mapPositionX","setMapPositionX","diffX","setDiffX","diffY","setDiffY","mapPositionY","setMapPositionY","isDragStart","setDragStart","summariesAfterCalculation","updateSummaries","zoomIndex","getFormatedCoefficient","coefficient","formattedCoefficiend","parseFloat","isNaN","useEffect","listOfCoef","Set","temp","el1","el2","summariesWithCoef","summaryForCountry","add","getColorForCountry","countryID","covidDataForCountry","mapCountries","CountryCode","shape","cursor","onMouseOver","evt","left","pageX","top","pageY","showCountry","onMouseOut","hideCountry","scaleMap","newScaleParam","onWheel","stopPropagation","deltaY","disabled","maxZoom","onMouseUp","onMouseMove","WorldMap","chartEvents","eventName","callback","chartWrapper","console","log","getChart","getSelection","getColors","statuses","colors","forEach","push","getColor","calculateMaxY","acc","curr","CovidChart","dataWorld","compare","correctData","resultArr","Array","isArray","prepereData","correctOptions","hAxis","viewWindow","min","max","vAxis","maxLines","chartArea","marginleft","animation","duration","easing","startup","prepereOptions","chartType","graphID","Graph","setCompare","world","htmlFor","Root","setSummaries","setFlags","dataWorldFromDays","setDataWorld","dataCountryFromDays","dataAll","setDataAll","dataMap","setDataMap","isLoaded","setIsLoaded","error","setError","indicatorsForFilter","updateIndicators","flagsResult","summariesResult","dataWorldFromDaysResult","Countries","fetchData","filtersStatus","getDataCountries","updateFilter","newFilterParams","getDataForCountry","dataCountryFromDaysResult","changeZIndex","querySelectorAll","zIndex","closest","Global","size","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8dd147b7.chunk.js","sourcesContent":["export const setCache = (cacheName, cacheValue) => {\n  sessionStorage.setItem(cacheName, JSON.stringify(cacheValue));\n};\n\nexport const getCache = (cacheName) => {\n  const cache = sessionStorage.getItem(cacheName);\n  return JSON.parse(cache);\n};\n","import axios from 'axios';\nimport { parse, format, addDays, endOfToday } from 'date-fns';\nimport { setCache, getCache } from '../services/cache';\n\nconst cache = {};\nconst BASE_URL = 'https://api.covid19api.com/';\n\n/*\nСписок стран\nВозвращает массив из объектов вида data[n], country_slug - data[n].Slug, название страны - data[n].Country\n*/\nexport const getCovidCountries = async () => {\n  const endPointCountries = 'countries';\n  const { data: countries } = await axios.get(`${BASE_URL}${endPointCountries}`);\n  return countries;\n};\n\n/*\nВозвращает статистику всех статусов по стране по всем датам, массив объектов вида\n{\nCountry: \"China\",\nCountryCode: \"\",\nCityCode: \"\",\nLat: \"0\",\nLon: \"0\",\nConfirmed: 94025,\nDeaths: 4748,\nRecovered: 87707,\nActive: 1570,\nDate: \"2020-12-10T00:00:00Z\"\n}\n*/\nexport const getDataCountryFromDays = async (country_slug) => {\n  if(!country_slug) {\n    return;\n  }\n  country_slug = country_slug.split('(').join().split(')').join();\n  if (cache[country_slug]) {\n    return cache[country_slug];\n  }\n\n  if (getCache(country_slug)) {\n    return getCache(country_slug);\n  }\n\n  const endPointCountries = `total/country/${country_slug}`;\n  const { data: summaries } = await axios.get(`${BASE_URL}${endPointCountries}`);\n\n  cache[country_slug] = summaries.map((el) => {\n    return {\n      ...el,\n      TotalConfirmed: el.Confirmed,\n      TotalDeaths: el.Deaths,\n      TotalRecovered: el.Recovered,\n    }\n  });\n\n  // cache[country_slug] = summaries;\n  setCache(country_slug, cache[country_slug]);\n  return cache[country_slug];\n};\n\n/* Возвращает данные по стране за последний день, объект типа:\n{\nActive: 1570\nCityCode: \"\"\nConfirmed: 94025\nCountry: \"China\"\nCountryCode: \"\"\nDate: \"2020-12-10T00:00:00Z\"\nDeaths: 4748\nRecovered: 87707\n}\n*/\nexport const getDataCountryLastDay = async (country_slug) => {\n  if (cache[`${country_slug}_last_day`]) {\n    return cache[`${country_slug}_last_day`];\n  }\n\n  const currentDate = endOfToday();\n  const yesterday = addDays(currentDate, -1);\n  const endPointCountries = `total/country/${country_slug}?from=${format(yesterday, 'Y-MM-dd')}&to=${format(currentDate, 'Y-MM-dd')}`;\n  const { data: summaries } = await axios.get(`${BASE_URL}${endPointCountries}`);\n  cache[`${country_slug}_last_day`] = summaries[0];\n\n  return summaries[0];\n};\n\n/* Возвращает статистику всех статусов по всему миру по всем датам, массив объектов вида\n{\nDate: Tue Jan 28 2020 00:01:00 GMT+0300 (Moscow Standard Time)\nNewConfirmed: 87137\nNewDeaths: 8726\nNewRecovered: 27085\nConfirmed: 2155152\nDeaths: 149156\nRecovered: 490147\n}\n*/\nexport const getDataWorldFromDays = async () => {\n  if (cache['world']) {\n    return cache['world'];\n  }\n\n  if (getCache('world')) {\n    return getCache('world');\n  }\n\n  const endPointCountries = 'world';\n  const { data: summaries } = await axios.get(`${BASE_URL}${endPointCountries}`);\n  summaries.sort((a, b) => a.TotalConfirmed > b.TotalConfirmed ? 1 : -1);\n  const date = parse('22-01-2020', 'dd-mm-yyyy', new Date());\n\n  cache['world'] = summaries.map((el, index) => {\n    return {\n      ...el,\n      Date: addDays(date, index).toDateString()\n    }\n  });\n\n  setCache('world', cache['world']);\n\n  return cache['world'];\n};\n\nexport const getSummaries = async () => {\n  if (cache['summaries']) {\n    return cache['summaries'];\n  }\n\n  if (getCache('summaries')) {\n    return getCache('summaries');\n  }\n\n  const endPointCountries = 'summary';\n  const { data: summaries } = await axios.get(`${BASE_URL}${endPointCountries}`);\n  cache['summaries'] = summaries;\n  setCache('summaries', cache['summaries']);\n  return summaries;\n};\n","import axios from 'axios';\nimport { setCache, getCache } from '../services/cache';\n\n/*\nСписок флагов\nВозвращает массив из объектов вида data[n], флаг - data[n].flag, название страны - data[n].name, население - data[n].population\n*/\n\nexport const getFlags = async () => {\n    if (getCache('flags')) {\n        return getCache('flags');\n    }\n\n    const url =  'https://restcountries.eu/rest/v2/all?fields=name;population;flag';\n    const { data: flags } = await axios.get(url);\n    setCache('flags', flags);\n    return flags;\n};\n\n/*\nВозвращает количество населения страны country_slug\n*/\n\nexport const getPopulationCountry = async (country_slug) => {\n    const url =  `https://restcountries.eu/rest/v2/name/${country_slug}`;\n    const { data: country } = await axios.get(url);\n    const [result] = country.filter((el) => el.name.toLowerCase() === country_slug);\n\n    return result.population;\n};\n","export const filters = {\n  status: {\n    confirmed : 'TotalConfirmed',\n    deaths : 'TotalDeaths',\n    recovered: 'TotalRecovered',\n  },\n  period: {\n    all : 'All',\n    lastDay : 'LastDay',\n  },\n  relative: {\n    absolute : 'Absolute',\n    to100men : 'To100men',\n  },\n  geography: '',\n  allowed: {\n    allowedNew: ['NewConfirmed', 'NewDeaths', 'NewRecovered'],\n    allowedTotal: ['TotalConfirmed', 'TotalDeaths', 'TotalRecovered']\n  },\n  world: true,\n};\n","export default function TdItem({value, thNames}) {\n    return <td aria-label={thNames}>{value}</td>\n}\n","import React from 'react';\nimport TdItem from './tdItem';\n\nexport default function Table({ tableName, current, currentCountryTitle }) {\n\n  const userLang = navigator.language;\n  const thNames = ['Confirmed', 'Deaths', 'Recovered']\n  const items = Object.values(current);\n\n    return (\n        <table className='summaries-table'>\n            <caption><h4 className='title'>{currentCountryTitle ? currentCountryTitle : tableName}</h4></caption>\n            <thead>\n                <tr>\n                    {thNames.map((el) =>\n                        <th scope=\"col\">{el}</th>\n                    )}\n                </tr>\n            </thead>\n            <tbody>\n                <tr>\n                    {items.map((el, i) =>\n                        <TdItem thNames = {thNames[i]} key={i} value={new Intl.NumberFormat(userLang, { minimumFractionDigits: 0, maximumFractionDigits: 2}).format((el || 0))} />\n                    )}\n                </tr>\n            </tbody>\n        </table>\n    )\n}","import { endOfToday } from \"date-fns\";\nimport { format } from 'date-fns';\nimport {filters} from \"../constants/filters\";\n\nconst populationWorld = 7 * 10 ** 9;\n\n/*\nВозвращает статистику всех статусов по стране по всем датам на 100 тыс. населения, массив объектов вида\n{\nCountry: \"China\",\nCountryCode: \"\",\nCityCode: \"\",\nLat: \"0\",\nLon: \"0\",\nConfirmed: 0.08,\nDeaths: 0.056,\nRecovered: 0.023,\nDate: \"2020-12-10T00:00:00Z\"\n}\ncountry_slug = название страны, все маленькие буквы\n*/\n\nexport const calc100Men = (data, population) => {\n  return data.map((el) => ({\n    TotalConfirmed: Math.round(el.TotalConfirmed / (population / 10 ** 5) * 100) / 100,\n    TotalDeaths: Math.round(el.TotalDeaths / (population / 10 ** 5) * 100) / 100,\n    TotalRecovered: Math.round(el.TotalRecovered / (population / 10 ** 5) * 100) / 100,\n    NewConfirmed: Math.round(el.NewConfirmed / (population / 10 ** 5) * 100) / 100,\n    NewDeaths: Math.round(el.NewDeaths / (population / 10 ** 5) * 100) / 100,\n    NewRecovered: Math.round(el.NewRecovered / (population / 10 ** 5) * 100) / 100,\n    Date: el.Date,\n  }));\n};\n\n\n/*Итоговые данные по миру, объект вида\n {\n  NewConfirmed: 623213, //Последний день\n  TotalConfirmed: 71694121,\n  NewDeaths: 10224, //Последний день\n  TotalDeaths: 1604878,\n  NewRecovered: 1506921, //Последний день\n  TotalRecovered: 46848398\n} */\n/*\n  filters: status = 'TotalConfirmed', relative = 'Absolute', period = 'lastDay'\n*/\n\nexport const getDataWorldLastDay = (data, filters) => {\n  if (!data) {\n    return;\n  }\n\n  const currentDate = endOfToday();\n  let result = [...data];\n\n  if (filters.relative === 'To100men') {\n    result = calc100Men(result, populationWorld);\n  }\n\n   result = result.map((el) => {\n    return { Date: currentDate, Data: el[filters.status] };\n  });\n\n  return result;\n};\n\n//Данные для мира и по выбранной стране по дням\nexport const getData = (data, filters, population = populationWorld) => {\n  if (!data) {\n    return;\n  }\n\n  let result = [...data];\n  let filtersStatus = filters.status;\n  let currentDate = false;\n\n  //Данные за последний  день\n  if(result.length === 1) {\n    currentDate = endOfToday();\n    filtersStatus = filters.status.replace('Total', 'New');\n  }\n  if (filters.relative === 'To100men') {\n    result = calc100Men(result, population);\n  }\n\n  result = result.map((el) => {\n    //Костыль, что-то не так со статистикой в API у Китая в один день\n    if(filters.geography === 'China' && el.TotalConfirmed > 6000000) {\n      el.TotalConfirmed = 90100;\n    }\n    return { Date: currentDate ? format(new Date(currentDate), 'dd-MMM-yyyy') : format(new Date(el.Date),'dd-MMM-yyyy'), ...el};\n  });\n\n  return result;\n};\n\nexport const getDataCountries = (data, globalFilters) => {\n  if (!data) {\n    return;\n  }\n\n  let result = [...data];\n  let filtersStatus = globalFilters.status;\n  let currentDate;\n  //Данные за последний день, передать сюда константу filters\n  if(globalFilters.period === filters.period.lastDay) {\n    currentDate = endOfToday();\n    filtersStatus = globalFilters.status.replace('Total', 'New');\n  }\n  result = result.map((el) => {\n    return { Data: el[filtersStatus], ...el };\n  });\n\n  if (globalFilters.relative === 'To100men') {\n    result = result.map((el) => {\n      return {\n    ...el,\n     Data: Math.round( el.Data / (el.population / 10 ** 5) * 100) / 100\n     }});\n  }\n\n  return result;\n};\n\nexport const getColorsFromFilters = (status) => {\n  let color;\n  switch (status) {\n    case filters.status.recovered:\n      color = `39,150,3`;\n      break;\n    case filters.status.deaths:\n      color =  `0,23,144`;\n      break;\n    default:\n      color =  `245,0,0`;\n      break;\n  }\n  return color;\n};\n\nexport const getFilterName = (value) => {\n  let result;\n  switch (value) {\n    case filters.status.recovered:\n      result = 'Recovered';\n      break;\n    case filters.status.deaths:\n      result =  'Deaths';\n      break;\n    case filters.status.confirmed:\n      result =  'Confirmed';\n      break;\n    case filters.period.all:\n      result = 'All Time';\n      break;\n    case filters.period.lastDay:\n      result =  'Last Day';\n      break;\n    case filters.relative.absolute:\n      result =  'Absolute';\n      break;\n    case filters.relative.to100men:\n      result =  'Per 100k';\n      break;\n  }\n  return result;\n};","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\");\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Icons\",\n  stroke: \"none\",\n  strokeWidth: 1,\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Two-Tone\",\n  transform: \"translate(-888.000000, -349.000000)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Action\",\n  transform: \"translate(100.000000, 100.000000)\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  id: \"Two-Tone-/-Action-/-minimize\",\n  transform: \"translate(782.000000, 230.000000)\"\n}, /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"Path\",\n  points: \"0 0 24 0 24 24 0 24\"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  id: \"\\\\uD83D\\\\uDD39-Primary-Color\",\n  fill: \"#1D1D1D\",\n  points: \"6 19 18 19 18 21 6 21\"\n}))))));\n\nfunction SvgSmall(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"12px\",\n    height: \"2px\",\n    viewBox: \"0 0 12 2\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"minimize\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSmall);\nexport default __webpack_public_path__ + \"static/media/small.e0deabb5.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m408 184h-136c-4.417969 0-8-3.582031-8-8v-136c0-22.089844-17.910156-40-40-40s-40 17.910156-40 40v136c0 4.417969-3.582031 8-8 8h-136c-22.089844 0-40 17.910156-40 40s17.910156 40 40 40h136c4.417969 0 8 3.582031 8 8v136c0 22.089844 17.910156 40 40 40s40-17.910156 40-40v-136c0-4.417969 3.582031-8 8-8h136c22.089844 0 40-17.910156 40-40s-17.910156-40-40-40zm0 0\"\n});\n\nfunction SvgPlus(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"448pt\",\n    viewBox: \"0 0 448 448\",\n    width: \"448pt\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlus);\nexport default __webpack_public_path__ + \"static/media/plus.c6f2e133.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9.29,13.29,4,18.59V17a1,1,0,0,0-2,0v4a1,1,0,0,0,.08.38,1,1,0,0,0,.54.54A1,1,0,0,0,3,22H7a1,1,0,0,0,0-2H5.41l5.3-5.29a1,1,0,0,0-1.42-1.42ZM5.41,4H7A1,1,0,0,0,7,2H3a1,1,0,0,0-.38.08,1,1,0,0,0-.54.54A1,1,0,0,0,2,3V7A1,1,0,0,0,4,7V5.41l5.29,5.3a1,1,0,0,0,1.42,0,1,1,0,0,0,0-1.42ZM21,16a1,1,0,0,0-1,1v1.59l-5.29-5.3a1,1,0,0,0-1.42,1.42L18.59,20H17a1,1,0,0,0,0,2h4a1,1,0,0,0,.38-.08,1,1,0,0,0,.54-.54A1,1,0,0,0,22,21V17A1,1,0,0,0,21,16Zm.92-13.38a1,1,0,0,0-.54-.54A1,1,0,0,0,21,2H17a1,1,0,0,0,0,2h1.59l-5.3,5.29a1,1,0,0,0,0,1.42,1,1,0,0,0,1.42,0L20,5.41V7a1,1,0,0,0,2,0V3A1,1,0,0,0,21.92,2.62Z\"\n});\n\nfunction SvgExpand(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgExpand);\nexport default __webpack_public_path__ + \"static/media/expand.dd75b582.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport Draggable from 'react-draggable';\nimport Table from './table';\nimport { calc100Men } from '../../services/calculations';\nimport { filters } from '../../constants/filters'\nimport { ReactComponent as MinimizeIcon } from \"../../icons/small.svg\";\nimport { ReactComponent as MaximizeIcon } from \"../../icons/plus.svg\";\nimport { ReactComponent as Expand } from \"../../icons/expand.svg\";\n\nclass Summary extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const currentCountryObj = this.getByCountry(props.summariesCountries, 'Belarus');\n    const population = currentCountryObj.population;\n\n    this.state = {\n      current: this.getBySelect(),\n\n      currentTotal: this.getBySelect(this.props.summaries),\n      currentCountry: this.getBySelect(currentCountryObj),\n\n      defaultCountryTitle: 'Belarus',\n      defaultPosition: { x: 0, y: 0 },\n\n      expanded:false,\n      fullSize:true,\n      minimize:true,\n      maximize:false,\n\n      populationWorld: 7 * 10 ** 9,\n      populationCountry: population,\n\n      checkedAbsolute: true,\n      checkedPer100k: false,\n\n      checkedAll: true,\n      checkedLastday: false\n\n    };\n\n    this.getBySelect = this.getBySelect.bind(this);\n    this.getByCountry = this.getByCountry.bind(this);\n    this.handlePer100kChange = this.handlePer100kChange.bind(this);\n    this.handleAbsoluteChange = this.handleAbsoluteChange.bind(this);\n    this.handleLastDayChange = this.handleLastDayChange.bind(this);\n    this.handleAllChange = this.handleAllChange.bind(this);\n\n  }\n\n  getByCountry(countries, findCountry) {\n    return countries.filter((el) => el.Country === findCountry).find(el => el);\n  }\n\n  getBySelect(object, value = filters.period.all) {\n\n    let allowed;\n\n    if (value === filters.period.lastDay) {\n      allowed = filters.allowed.allowedNew;\n    } else if (value === filters.period.all) {\n      allowed = filters.allowed.allowedTotal;\n    }\n\n    return Object.keys(object || {})\n      .filter(key => allowed.includes(key))\n      .reduce((obj, key) => {\n        obj[key] = object[key];\n        return obj;\n      }, {});\n  }\n\n  summariesSelect(obj, e, countrySelected = false) {\n\n    const { getBySelect, getByCountry } = this;\n    const { populationCountry, populationWorld, defaultCountryTitle } = this.state\n    const { summariesCountries, globalFilters } = this.props\n\n    const absolute = (countrySelected)\n      ? getBySelect(getByCountry(summariesCountries, globalFilters.geography || defaultCountryTitle), e)\n      : getBySelect(obj, e);\n\n    const per100k = getBySelect(calc100Men([absolute], (countrySelected) ? populationCountry : populationWorld)[0], e)\n\n    return {\n      per100k,\n      absolute\n    }\n  }\n\n  handleAllChange(e) {\n\n    const { checkedPer100k } = this.state;\n\n    const totalObj = this.summariesSelect(this.props.summaries, e.target.value, false)\n    const countryObj = this.summariesSelect(this.props.summariesCountries, e.target.value, true);\n\n    this.setState({\n      currentTotal: (checkedPer100k) ? totalObj.per100k : totalObj.absolute,\n      currentCountry: (checkedPer100k) ? countryObj.per100k : countryObj.absolute,\n      checkedAll: true,\n      checkedLastday: false\n    });\n\n    this.props.updateFilters({\n      period: filters.period.all\n    })\n\n  }\n\n  handleLastDayChange(e) {\n\n    const { checkedPer100k } = this.state;\n\n    const totalObj = this.summariesSelect(this.props.summaries, e.target.value)\n    const countryObj = this.summariesSelect(this.props.summariesCountries, e.target.value, true);\n\n    this.setState({\n      checkedAll: false,\n      checkedLastday: true,\n      currentTotal: (checkedPer100k) ? totalObj.per100k : totalObj.absolute,\n      currentCountry: (checkedPer100k) ? countryObj.per100k : countryObj.absolute,\n    });\n\n    this.props.updateFilters({\n      period: filters.period.lastDay\n    })\n\n  }\n\n  handleAbsoluteChange() {\n\n    const countryObj = this.getByCountry(this.props.summariesCountries, this.props.globalFilters.geography || this.state.defaultCountryTitle);\n\n    this.setState({\n      currentTotal: this.getBySelect(this.props.summaries),\n      currentCountry: this.getBySelect(countryObj),\n      checkedAbsolute: true,\n      checkedPer100k: false,\n    });\n\n    this.props.updateFilters({\n      relative: filters.relative.absolute\n    })\n  }\n\n  handlePer100kChange() {\n\n    const { getBySelect, getByCountry } = this;\n    const { populationCountry, populationWorld, defaultCountryTitle } = this.state\n    const { globalFilters, summaries, summariesCountries } = this.props\n\n    const totalObj = getBySelect(summaries);\n    const countryObj = getByCountry(summariesCountries, globalFilters.geography || defaultCountryTitle);\n\n    const per100kTotal = getBySelect(calc100Men([totalObj], populationWorld)[0])\n    const per100kCountry = getBySelect(calc100Men([getBySelect(countryObj)], populationCountry)[0])\n\n    this.setState({\n      currentTotal: per100kTotal,\n      currentCountry: per100kCountry,\n      checkedAbsolute: false,\n      checkedPer100k: true\n    });\n\n    this.props.updateFilters({\n      relative: filters.relative.to100men\n    })\n  }\n\n  componentDidUpdate(prevProps) {\n\n    const { getBySelect, getByCountry, handlePer100kChange, handleAbsoluteChange, handleLastDayChange, handleAllChange } = this;\n    const { globalFilters, summariesCountries } = this.props;\n    const { checkedPer100k, checkedAbsolute, populationCountry, populationWorld, defaultCountryTitle } = this.state;\n\n    const countryObj = getByCountry(summariesCountries, globalFilters.geography || defaultCountryTitle);\n    const per100kCountry = getBySelect(calc100Men([getBySelect(countryObj)], populationCountry)[0]);\n\n    if (globalFilters.relative !== prevProps.globalFilters.relative) {\n      if (globalFilters.relative === filters.relative.to100men) {\n        handlePer100kChange();\n      } else if (globalFilters.relative === filters.relative.absolute) {\n        handleAbsoluteChange();\n      }\n    }\n\n    if (globalFilters.period !== prevProps.globalFilters.period) {\n      if (globalFilters.period === filters.period.lastDay) {\n        handleLastDayChange({ target: { value: filters.period.lastDay } });\n      } else if (globalFilters.period === filters.period.all) {\n        handleAllChange({ target: { value: filters.period.all } });\n      }\n    }\n\n    if (globalFilters.geography !== prevProps.globalFilters.geography) {\n      if (globalFilters.geography !== prevProps.globalFilters.geography && globalFilters.geography !== '') {\n        this.setState({\n          currentCountry: (checkedPer100k) ? per100kCountry : this.getBySelect(countryObj),\n          checkedAbsolute: checkedAbsolute,\n          checkedPer100k: checkedPer100k,\n          populationCountry: populationWorld || countryObj.population\n\n        })\n      }\n    }\n  }\n\n  handleFullSize() {\n    this.setState({\n      expanded: !this.state.expanded,\n      minimize: !this.state.minimize,\n    })\n  };\n\n  handleMinimize() {\n    this.setState({\n      fullSize: !this.state.fullSize,\n      maximize: true,\n      minimize: false\n    })\n  }\n\n  handleMaximize = () => {\n\n    this.setState({\n      fullSize: !this.state.fullSize,\n      maximize: false,\n      minimize: true\n    })\n  }\n  \n  render() {\n\n    const { globalFilters } = this.props;\n    const { defaultCountryTitle, currentCountry, currentTotal, defaultPosition } = this.state;\n\n    return (\n      <Draggable position={this.state.expanded ? defaultPosition : null} onMouseDown={this.props.handleOnMouseUp}>\n        <div className={`summary-wrapper ${this.state.expanded ? 'expanded' : ''}`}>\n          <div className=\"controls\">\n            <div className=\"title\">Summary</div>\n\n            <MaximizeIcon className=\"controls-icons\" onClick={() => this.handleMaximize()} style={{ display: this.state.maximize ? 'inline-block' : 'none' }} />\n\n            <MinimizeIcon className=\"controls-icons\" onClick={() => this.handleMinimize()} style={{ display: this.state.minimize ? 'inline-block' : 'none' }} />\n\n            <Expand className=\"controls-icons\" onClick={() =>this.handleFullSize()} style={{ display: this.state.fullSize ? 'inline-block' : 'none' }} />\n\n          </div>\n          {\n            this.state.fullSize ? (\n              <div className=\"block-inner\">\n                <div className=\"tables-wrap\">\n                  <div className=\"border-stroke\">\n                  <div className=\"filters\">\n                    <div className='period-wrap'>\n                      <div className='absolute-change'>\n                        <label>\n                          <input type=\"radio\" value={filters.relative.absolute} checked={globalFilters.relative === filters.relative.absolute} onChange={this.handleAbsoluteChange} />\n                        Absolute\n                      </label>\n                      </div>\n\n                      <div className=\"per100k-change\">\n                        <label>\n                          <input type=\"radio\" value={filters.relative.to100men} checked={globalFilters.relative === filters.relative.to100men} onChange={this.handlePer100kChange} />\n                          Per 100k\n                        </label>\n                      </div>\n\n                    </div>\n\n                    <div className=\"relative-wrap\">\n\n                      <div className='all-time-change'>\n                        <label>\n                          <input type=\"radio\" value={filters.period.all} checked={globalFilters.period === filters.period.all} onChange={this.handleAllChange} />\n                          All Time\n                        </label>\n                      </div>\n\n                      <div className=\"lastDay-change\">\n                        <label>\n                          <input type=\"radio\" value={filters.period.lastDay} checked={globalFilters.period === filters.period.lastDay} onChange={this.handleLastDayChange} />\n                        Last Day\n                    </label>\n                      </div>\n\n                    </div>\n\n                  </div>\n                  </div>\n                  <Table tableName='World' current={currentTotal} />\n\n                  <Table currentCountryTitle={globalFilters.geography || defaultCountryTitle} tableName=\"\" current={currentCountry} />\n\n                </div>\n              </div>\n            ) : null\n          }\n        </div>\n      </Draggable>\n    );\n  }\n}\n\nexport default React.memo(Summary);\n","export const missedFlags = {\n  'United Kingdom': 'https://restcountries.eu/data/gbr.svg',\n  'Iran, Islamic Republic of': 'https://restcountries.eu/data/irn.svg',\n  'Bolivia': 'https://restcountries.eu/data/bol.svg',\n  'Moldova': 'https://restcountries.eu/data/mda.svg',\n  'Venezuela (Bolivarian Republic)': 'https://restcountries.eu/data/ven.svg',\n  'Palestinian Territory': 'https://restcountries.eu/data/pse.svg',\n  'Macedonia, Republic of': 'https://restcountries.eu/data/mkd.svg',\n  'Korea (South)': 'https://restcountries.eu/data/kor.svg',\n  'Congo (Kinshasa)': 'https://restcountries.eu/data/cog.svg',\n  'Cape Verde': 'https://restcountries.eu/data/cpv.svg',\n  'Syrian Arab Republic (Syria)': 'https://restcountries.eu/data/syr.svg',\n  'Congo (Brazzaville)': 'https://restcountries.eu/data/cog.svg',\n  'Taiwan, Republic of China': 'https://restcountries.eu/data/twn.svg',\n  'Saint Vincent and Grenadines': 'https://restcountries.eu/data/vct.svg',\n  'Holy See (Vatican City State)': 'https://restcountries.eu/data/vat.svg',\n  'Macao, SAR China': 'https://restcountries.eu/data/mac.svg',\n  'Lao PDR': 'https://restcountries.eu/data/lao.svg',\n};\n\nexport const missedPopulations = {\n  'United Kingdom': 65110000,\n  'Iran, Islamic Republic of': 79369900,\n  'Bolivia': 10985059,\n  'Moldova': 3553100,\n  'Venezuela (Bolivarian Republic)': 31028700,\n  'Palestinian Territory': 4682467,\n  'Macedonia, Republic of': 2058539,\n  'Korea (South)': 50801405,\n  'Congo (Kinshasa)': 4741000,\n  'Cape Verde': 531239,\n  'Syrian Arab Republic (Syria)': 18564000,\n  'Congo (Brazzaville)': 4741000,\n  'Taiwan, Republic of China': 23503349,\n  'Saint Vincent and Grenadines': 109991,\n  'Holy See (Vatican City State)': 451,\n  'Macao, SAR China': 649100,\n  'Lao PDR': 6492400,\n};\n","export const sortByParameter = (data, parameter) => {\n  if (parameter === 'Country') return data.sort((a, b) => a[parameter] > b[parameter] ? 1 : -1);\n  else return data.sort((a, b) => a[parameter] < b[parameter] ? 1 : -1)\n};\n","import { filters } from \"../constants/filters\";\n\nexport const getSelectFilters = (optionNumber) => {\n\n    let status, period, relative;\n\n    switch (optionNumber) {\n        case 0:\n        case 1:\n        case 6:\n        case 7:\n            status = filters.status.confirmed;\n            break;\n        case 2:\n        case 3:\n        case 8:\n        case 9:\n            status = filters.status.deaths;\n            break;\n        case 4:\n        case 5:\n        case 10:\n        case 11:\n            status = filters.status.recovered;\n            break;\n        default:\n            break;\n    }\n\n    if (optionNumber > 5) relative = filters.relative.to100men;\n    else relative = filters.relative.absolute;\n\n    if (optionNumber % 2 === 0) period = filters.period.all;\n    else period = filters.period.lastDay;\n\n    return {status, period, relative};\n}\n\nexport const getSortedBy = (status, period, relative) => {\n    let sortedBy = {}\n    if (status === 'TotalConfirmed' && period === 'All' && relative === 'Absolute') sortedBy = {idx: 0, sortedBy: 'total cases'};\n    if (status === 'TotalConfirmed' && period === 'LastDay' && relative === 'Absolute') sortedBy = {idx: 1, sortedBy: 'new cases'};\n    if (status === 'TotalDeaths' && period === 'All' && relative === 'Absolute') sortedBy = {idx: 2, sortedBy: 'total deaths'};\n    if (status === 'TotalDeaths' && period === 'LastDay' && relative === 'Absolute') sortedBy = {idx: 3, sortedBy: 'new deaths'};\n    if (status === 'TotalRecovered' && period === 'All' && relative === 'Absolute') sortedBy = {idx: 4, sortedBy: 'total recovered'};\n    if (status === 'TotalRecovered' && period === 'LastDay' && relative === 'Absolute') sortedBy = {idx: 5, sortedBy: 'new recovered'};\n    if (status === 'TotalConfirmed' && period === 'All' && relative === 'To100men') sortedBy = {idx: 6, sortedBy: 'total cases per 100k'};\n    if (status === 'TotalConfirmed' && period === 'LastDay' && relative === 'To100men') sortedBy = {idx: 7, sortedBy: 'new cases per 100k'};\n    if (status === 'TotalDeaths' && period === 'All' && relative === 'To100men') sortedBy = {idx: 8, sortedBy: 'total deaths per 100k'};\n    if (status === 'TotalDeaths' && period === 'LastDay' && relative === 'To100men') sortedBy = {idx: 9, sortedBy: 'new deaths per 100k'};\n    if (status === 'TotalRecovered' && period === 'All' && relative === 'To100men') sortedBy = {idx: 10, sortedBy: 'total recovered per 100k'};\n    if (status === 'TotalRecovered' && period === 'LastDay' && relative === 'To100men') sortedBy = {idx: 11, sortedBy: 'new recovered per 100k'};\n    return sortedBy;\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m335.476562 344.277344h-158.953124c-1.992188.066406-3.785157 1.214844-4.691407 2.988281-.902343 1.773437-.773437 3.898437.34375 5.550781l79.476563 121.480469c.941406 1.488281 2.582031 2.390625 4.347656 2.390625s3.40625-.902344 4.347656-2.390625l79.476563-121.480469c1.117187-1.652344 1.246093-3.777344.34375-5.550781-.90625-1.773437-2.699219-2.921875-4.691407-2.988281zm0 0\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m476.691406 0h-441.382812c-19.5 0-35.308594 15.808594-35.308594 35.308594v229.519531c0 19.5 15.808594 35.308594 35.308594 35.308594h441.382812c19.5 0 35.308594-15.808594 35.308594-35.308594v-229.519531c0-19.5-15.808594-35.308594-35.308594-35.308594zm-247.175781 44.136719c0-4.875 3.953125-8.828125 8.828125-8.828125h35.3125c4.875 0 8.828125 3.953125 8.828125 8.828125v35.3125c0 4.875-3.953125 8.828125-8.828125 8.828125h-35.3125c-4.875 0-8.828125-3.953125-8.828125-8.828125zm0 88.277343c0-4.875 3.953125-8.828124 8.828125-8.828124h35.3125c4.875 0 8.828125 3.953124 8.828125 8.828124v35.308594c0 4.875-3.953125 8.828125-8.828125 8.828125h-35.3125c-4.875 0-8.828125-3.953125-8.828125-8.828125zm-88.273437-88.277343c0-4.875 3.953124-8.828125 8.828124-8.828125h35.308594c4.875 0 8.828125 3.953125 8.828125 8.828125v35.3125c0 4.875-3.953125 8.828125-8.828125 8.828125h-35.308594c-4.875 0-8.828124-3.953125-8.828124-8.828125zm0 88.277343c0-4.875 3.953124-8.828124 8.828124-8.828124h35.308594c4.875 0 8.828125 3.953124 8.828125 8.828124v35.308594c0 4.875-3.953125 8.828125-8.828125 8.828125h-35.308594c-4.875 0-8.828124-3.953125-8.828124-8.828125zm-35.3125 35.308594c0 4.875-3.949219 8.828125-8.828126 8.828125h-35.308593c-4.875 0-8.828125-3.953125-8.828125-8.828125v-35.308594c0-4.875 3.953125-8.828124 8.828125-8.828124h35.308593c4.878907 0 8.828126 3.953124 8.828126 8.828124zm0-88.273437c0 4.875-3.949219 8.828125-8.828126 8.828125h-35.308593c-4.875 0-8.828125-3.953125-8.828125-8.828125v-35.3125c0-4.875 3.953125-8.828125 8.828125-8.828125h35.308593c4.878907 0 8.828126 3.953125 8.828126 8.828125zm264.828124 176.550781c0 4.875-3.953124 8.828125-8.828124 8.828125h-211.859376c-4.875 0-8.828124-3.953125-8.828124-8.828125v-35.308594c0-4.878906 3.953124-8.828125 8.828124-8.828125h211.859376c4.875 0 8.828124 3.949219 8.828124 8.828125zm0-88.277344c0 4.875-3.953124 8.828125-8.828124 8.828125h-35.308594c-4.875 0-8.828125-3.953125-8.828125-8.828125v-35.308594c0-4.875 3.953125-8.828124 8.828125-8.828124h35.308594c4.875 0 8.828124 3.953124 8.828124 8.828124zm0-88.273437c0 4.875-3.953124 8.828125-8.828124 8.828125h-35.308594c-4.875 0-8.828125-3.953125-8.828125-8.828125v-35.3125c0-4.875 3.953125-8.828125 8.828125-8.828125h35.308594c4.875 0 8.828124 3.953125 8.828124 8.828125zm88.277344 88.273437c0 4.875-3.953125 8.828125-8.828125 8.828125h-35.308593c-4.878907 0-8.828126-3.953125-8.828126-8.828125v-35.308594c0-4.875 3.949219-8.828124 8.828126-8.828124h35.308593c4.875 0 8.828125 3.953124 8.828125 8.828124zm0-88.273437c0 4.875-3.953125 8.828125-8.828125 8.828125h-35.308593c-4.878907 0-8.828126-3.953125-8.828126-8.828125v-35.3125c0-4.875 3.949219-8.828125 8.828126-8.828125h35.308593c4.875 0 8.828125 3.953125 8.828125 8.828125zm0 0\"\n});\n\nfunction SvgKeypad(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"512pt\",\n    viewBox: \"0 -18 512 512\",\n    width: \"512pt\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2, _ref3);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgKeypad);\nexport default __webpack_public_path__ + \"static/media/keypad.95175ea1.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { filters } from \"../../constants/filters\";\nimport {getFilterName} from \"../../services/calculations\";\n\nconst Filters = ({ globalFilters, updateFilters, dataForCountry, options }) => {\n  const onSelectChange = (e) => {\n    updateFilters({status: e.target.value});\n  };\n\n  const onRadioChangeRelative = (e) => {\n    updateFilters({relative: e.target.value});\n  };\n\n  const onRadioChangePeriod = (e) => {\n    updateFilters({period: e.target.value});\n  };\n\n  return (\n    <>\n      {\n        options.relative && (\n          <div>\n            <div>\n              <label>\n                <input\n                  type=\"radio\"\n                  value={filters.relative.absolute}\n                  checked={globalFilters.relative === filters.relative.absolute ? 'selected' : ''}\n                  onChange={onRadioChangeRelative}/>\n                {getFilterName(filters.relative.absolute)}</label>\n            </div>\n            <div>\n              <label>\n                <input\n                  type=\"radio\"\n                  value={filters.relative.to100men}\n                  onChange={onRadioChangeRelative}\n                  checked={globalFilters.relative === filters.relative.to100men ? 'selected' : ''}\n                />\n                {getFilterName(filters.relative.to100men)}</label>\n            </div>\n          </div>\n        )\n      }\n      {\n        options.period && (\n          <div>\n            <div>\n              <label>\n                <input\n                  type=\"radio\"\n                  value={filters.period.all}\n                  checked={globalFilters.period === filters.period.all ? 'selected' : ''}\n                  onChange={onRadioChangePeriod}/>\n                {getFilterName(filters.period.all)}</label>\n            </div>\n            <div>\n              <label>\n                <input\n                  type=\"radio\"\n                  value={filters.period.lastDay}\n                  onChange={onRadioChangePeriod}\n                  checked={globalFilters.period === filters.period.lastDay ? 'selected' : ''}\n                />\n                {getFilterName(filters.period.lastDay)}</label>\n            </div>\n          </div>\n        )\n      }\n      {\n        options.status && (\n          <div className=\"filer-select\">\n            <select onChange={onSelectChange} value={globalFilters.status}>\n              <option value={filters.status.confirmed}>{getFilterName(filters.status.confirmed)}</option>\n              <option value={filters.status.deaths}>{getFilterName(filters.status.deaths)}</option>\n              <option value={filters.status.recovered}>{getFilterName(filters.status.recovered)}</option>\n            </select>\n          </div>\n        )\n      }\n    </>\n  );\n};\n\nexport default Filters;","import React from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport Draggable from 'react-draggable';\nimport { missedFlags, missedPopulations } from '../../constants/missed';\nimport { sortByParameter } from '../../services/sorting';\nimport { getSelectFilters, getSortedBy } from \"../../services/selectFilters\";\nimport { getFilterName } from \"../../services/calculations\";\nimport { ReactComponent as MinimizeIcon } from \"../../icons/small.svg\";\nimport { ReactComponent as MaximizeIcon } from \"../../icons/plus.svg\";\nimport { ReactComponent as Expand } from \"../../icons/expand.svg\";\nimport {ReactComponent as VKeyboard} from \"../../icons/keypad.svg\";\n\nimport Filters from \"../filters\";\n\nconst sortParameters = {\n    'total cases': 'TotalConfirmed',\n    'new cases': 'NewConfirmed',\n    'total deaths': 'TotalDeaths',\n    'new deaths': 'NewDeaths',\n    'total recovered': 'TotalRecovered',\n    'new recovered': 'NewRecovered',\n    'total cases per 100k': 'TotalConfirmedPerPopulation',\n    'new cases per 100k': 'NewConfirmedPerPopulation',\n    'total deaths per 100k': 'TotalDeathsPerPopulation',\n    'new deaths per 100k': 'NewDeathsPerPopulation',\n    'total recovered per 100k': 'TotalRecoveredPerPopulation',\n    'new recovered per 100k': 'NewRecoveredPerPopulation',\n};\n\nconst defaultPosition = {x: 0, y: 0};\n\nclass CountryList extends React.Component {\n    constructor() {\n        super();\n\n        this.state = {\n            sortedBy: 'total cases',\n            globalFilters: {},\n            filterText: '',\n            expanded:false,\n            fullSize:true,\n            minimize:true,\n            maximize:false,\n        };\n\n        this.listRef = React.createRef();\n        this.tbodyRef = React.createRef();\n        this.containerRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.setState({\n            sortedBy: 'total cases',\n            globalFilters: this.props.globalFilters,\n            filterText: '',\n            expanded: false,\n            fullSize: true,\n        });\n\n        this.initKeyboard();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n        const scrollToActive = () => {\n            const { status, period, relative } = this.props.globalFilters;\n            const sortedByObj = getSortedBy(status, period, relative);\n\n            const data = this.props.summaries.map(country => {\n                return {\n                    ...country,\n                    TotalConfirmedPerPopulation: ((country.TotalConfirmed * 100000) / country.population),\n                    NewConfirmedPerPopulation: ((country.NewConfirmed * 100000) / country.population),\n                    TotalDeathsPerPopulation: ((country.TotalDeaths * 100000) / country.population),\n                    NewDeathsPerPopulation: ((country.NewDeaths * 100000) / country.population),\n                    TotalRecoveredPerPopulation: ((country.TotalRecovered * 100000) / country.population),\n                    NewRecoveredPerPopulation: ((country.NewRecovered * 100000) / country.population),\n                }\n            })\n            const countryIdx = sortByParameter(data, sortParameters[sortedByObj.sortedBy]).findIndex(el => el['Country'] === this.props.globalFilters.geography);\n            if (countryIdx && this.tbodyRef.current.children[countryIdx]) {\n\n                this.tbodyRef.current.children[countryIdx].scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'start',\n                });\n            }\n        }\n\n        if ((this.props.globalFilters !== this.state.globalFilters) && this.props !== prevProps) {\n            const { status, period, relative, geography } = this.props.globalFilters;\n            const sortedByObj = getSortedBy(status, period, relative);\n            this.setState({ sortedBy: sortedByObj.sortedBy, status, period, relative });\n\n            if (geography) {\n                scrollToActive()\n            }\n        }\n\n        if (this.props.globalFilters.geography !== this.state.geography && this.props.globalFilters.geography) {\n            this.setState({geography: this.props.globalFilters.geography});\n        }\n    }\n\n    makeList(data = []) {\n        const { sortedBy } = this.state;\n\n        const userLang = navigator.language;\n\n        return sortByParameter(data, sortParameters[sortedBy]).map((item, index) => {\n            const { Country, flag } = item;\n            const { geography } = this.props.globalFilters;\n            let amount = item[sortParameters[sortedBy]];\n            amount = new Intl.NumberFormat(userLang, { minimumFractionDigits: 0, maximumFractionDigits: 2}).format(amount);\n\n            return (\n                <tr className={`country-list-item ${geography === Country ? 'country-list-item_selected' : ''}`} key={index} onClick={() => this.onCountryClick(Country)}>\n                    <td><img className=\"country-list-item-flag\" loading=\"lazy\" src={flag} alt=\"flag\"/></td>\n                    <td><span className=\"country-list-item-country\">{Country} </span></td>\n                    <td>{amount}</td>\n                </tr>\n            )\n        })\n    }\n\n    onInputChange = (e) => {\n        this.setState({filterText: e.target.value});\n    };\n\n    onCountryClick = (Country) => {\n        this.setState({geography: Country});\n        this.props.handleClickOnCountry(Country);\n    };\n\n    handleFullSize() {\n        this.setState({\n          expanded: !this.state.expanded,\n          minimize: !this.state.minimize,\n        })\n      };\n    \n      handleMinimize() {\n        this.setState({\n          fullSize: !this.state.fullSize,\n          maximize: true,\n          minimize: false\n        })\n      }\n    \n      handleMaximize = () => {\n    \n        this.setState({\n          fullSize: !this.state.fullSize,\n          maximize: false,\n          minimize: true\n        })\n      }\n\n    initKeyboard() {\n        const searchInput = document.getElementById(\"searсh\");\n        if (searchInput) {\n            window.VKeyboard.init(searchInput);\n        }\n    }\n\n    openKeyboard() {\n       const searchInput = document.getElementById(\"searсh\");\n        if (searchInput) {\n            window.VKeyboard.keyboardToggle();\n        }\n    }\n\n    render() {\n        const { summaries = [], flags = [] } = this.props;\n        const { filterText } = this.state;\n\n        let data = summaries.map((country) => {\n            const [geography] = flags.filter(item => item.name === country.Country);\n            const population = geography ? geography.population : missedPopulations[country.Country];\n\n            return {\n                ...country,\n                flag: geography ? geography.flag : missedFlags[country.Country],\n                population,\n                TotalConfirmedPerPopulation: ((country.TotalConfirmed * 100000) / population),\n                NewConfirmedPerPopulation: ((country.NewConfirmed * 100000) / population),\n                TotalDeathsPerPopulation: ((country.TotalDeaths * 100000) / population),\n                NewDeathsPerPopulation: ((country.NewDeaths * 100000) / population),\n                TotalRecoveredPerPopulation: ((country.TotalRecovered * 100000) / population),\n                NewRecoveredPerPopulation: ((country.NewRecovered * 100000) / population),\n            }\n        });\n\n\n        if (filterText !== '') {\n            data = data.filter(el => el['Country'].toLowerCase().includes(filterText.toLowerCase()))\n        }\n\n        let listItems = this.makeList(data);\n\n        const options = {'status': true, 'relative': true, 'period': true};\n\n        return (\n          <Draggable position={this.state.expanded ? defaultPosition : null} onMouseDown={this.props.handleOnMouseUp}>\n              <div\n                ref={this.containerRef}\n                className={`country-list-container ${this.state.expanded ? 'expanded' : ''} ${!this.state.fullSize ? 'min-size' : ''}`}\n              >\n                  <div className=\"controls\">\n                      <div className=\"title\">Countries</div>\n\n                    <MaximizeIcon className=\"controls-icons\" onClick={() => this.handleMaximize()} style={{ display: this.state.maximize ? 'inline-block' : 'none' }} />\n\n                    <MinimizeIcon className=\"controls-icons\" onClick={() => this.handleMinimize()} style={{ display: this.state.minimize ? 'inline-block' : 'none' }} />\n\n                    <Expand className=\"controls-icons\" onClick={() =>this.handleFullSize()} style={{ display: this.state.fullSize ? 'inline-block' : 'none' }} />\n\n                  </div>\n                  {\n                      this.state.fullSize ? (\n                        <div className=\"block-inner\">\n                            <div className=\"border-stroke\">\n                                <div className=\"filters\">\n                                    <Filters globalFilters={this.props.globalFilters}\n                                             updateFilters={this.props.updateFilters} options={options}/>\n                                </div>\n                                <div className=\"row-search\">\n                                    <input onChange={this.onInputChange} onFocus={this.onInputChange}\n                                           placeholder=\"Search...\" type=\"text\" id=\"searсh\"/>\n                                    <div className=\"v-keyboard\">\n                                        <VKeyboard className=\"controls-icons\" onClick={this.openKeyboard}/></div>\n                                </div>\n                            </div>\n                            <div ref={this.listRef} className=\"country-list\">\n\n                                <Scrollbars style={{width: 'auto', height: this.state.expanded ? '80vh' : '50vh'}}>\n                                    <table>\n                                        <tbody ref={this.tbodyRef}>\n                                    {listItems}\n                                        </tbody>\n                                    </table>\n                                </Scrollbars>\n\n                            </div>\n                        </div>\n                      ) : null\n                  }\n              </div>\n          </Draggable>\n        );\n    }\n}\n\nexport default CountryList;\n","import {getFilterName} from \"../../../services/calculations\";\nimport {filters} from \"../../../constants/filters\";\nconst userLang = navigator.language;\n\nconst Tooltip = ({ dataCountry, customStyles, globalFilters }) => {\n  const roundDijit = (globalFilters.relative === filters.relative.to100men) ? 2 : 0;\n    return (\n      <div id=\"tooltip\" className=\"tooltip\" style={{ display: 'none', ...customStyles }}>\n          <h5>Country: {dataCountry.Country}</h5>\n          <table>\n              <tbody>\n              <tr>\n                  <td>{getFilterName(globalFilters.status)}, {getFilterName(globalFilters.relative)}, {getFilterName(globalFilters.period)}:</td>\n                  <td>{new Intl.NumberFormat(userLang, { minimumFractionDigits: 0, maximumFractionDigits: 2}).format((dataCountry.Data || 0).toFixed(roundDijit))}</td>\n              </tr>\n              </tbody>\n          </table>\n      </div>\n    );\n};\n\nexport default Tooltip;\n","import React, {useState} from 'react';\nimport Draggable from 'react-draggable';\nimport { ReactComponent as MinimizeIcon } from \"../../../icons/small.svg\";\nimport { ReactComponent as MaximizeIcon } from \"../../../icons/plus.svg\";\nimport { ReactComponent as Expand } from \"../../../icons/expand.svg\";\nimport { getColorsFromFilters, getFilterName } from '../../../services/calculations';\nimport { filters } from \"../../../constants/filters\";\nimport Filters from \"../../filters\";\n\nconst Legend = ({data, diffCoeff, globalFilters, updateFilters, handleOnMouseUp}) => {\n\n  const [expanded, setExpanded] = useState(false);\n  const [fullSize, setFullSize] = useState(true);\n  const [minimize, setMinimize] = useState(true);\n  const [maximize, setMaximize] = useState(false);\n\n  const defaultPosition = {x: 0, y: 0};\n\n  const handleFullSize = () => {\n    setExpanded(!expanded);\n    setMinimize(!minimize);\n  };\n\n  const handleMinimize = () => {\n    setFullSize(!fullSize)\n    setMaximize(true)\n    setMinimize(false)\n\n  }\n\n  const handleMaximize = () => {\n    setFullSize(!fullSize)\n    setMaximize(false)\n    setMinimize(true)\n  }\n\n  const options = {'status': true, 'relative': true, 'period': true};\n  \n\n  const roundDijit = (globalFilters.relative === filters.relative.to100men) ? 2 : 0;\n  const userLang = navigator.language;\n\n  return (\n    <Draggable position={expanded ? defaultPosition : null} onMouseDown={handleOnMouseUp}>\n      <div className={`map-legend ${expanded ? 'expanded' : ''}`}>\n        <div className=\"controls\">\n          <div className=\"title\">Legend</div>\n           <MaximizeIcon className=\"controls-icons\" onClick={handleMaximize} style={{ display: maximize ? 'inline-block' : 'none' }} />\n\n          <MinimizeIcon className=\"controls-icons\" onClick={handleMinimize} style={{ display: minimize ? 'inline-block' : 'none' }} />\n\n          <Expand className=\"controls-icons\" onClick={handleFullSize} style={{ display: fullSize ? 'inline-block' : 'none' }} />\n        </div>\n        {\n          fullSize ? (\n            <div className=\"block-inner\">\n              <div className=\"flex-block\">\n                <table>\n                  <thead>\n                  <tr>\n                    <th colSpan=\"3\"><h4>{getFilterName(globalFilters.status)} {getFilterName(globalFilters.relative)} {getFilterName(globalFilters.period)}</h4></th>\n                  </tr>\n                  </thead>\n                  <tbody>\n                  {\n                    data.sort().map((value, index) => (\n                      <tr key={index}>\n                        <td style={{\n                          width: '45px',\n                          backgroundColor: `rgba(${getColorsFromFilters(globalFilters.status)},${value})`\n                        }}/>\n                        <td><span>before</span></td>\n                        <td>\n                         <span>\n                          {(new Intl.NumberFormat(userLang, {\n                          minimumFractionDigits: 0,\n                          maximumFractionDigits: 2\n                        }).format((value * diffCoeff).toFixed(roundDijit)))}\n                          </span>\n                        </td>\n                      </tr>\n                    ))\n                  }\n                  </tbody>\n                </table>\n                <div className=\"border-stroke\">\n                <div className=\"filters\">\n                  <Filters globalFilters={globalFilters} updateFilters={updateFilters} options={options}/>\n                </div>\n                </div>\n              </div>\n            </div>\n          ) : null\n        }\n      </div>\n    </Draggable>\n  )\n};\n\nexport default React.memo(Legend);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m405.332031 192h-170.664062v-170.667969c0-11.773437-9.558594-21.332031-21.335938-21.332031-11.773437 0-21.332031 9.558594-21.332031 21.332031v170.667969h-170.667969c-11.773437 0-21.332031 9.558594-21.332031 21.332031 0 11.777344 9.558594 21.335938 21.332031 21.335938h170.667969v170.664062c0 11.777344 9.558594 21.335938 21.332031 21.335938 11.777344 0 21.335938-9.558594 21.335938-21.335938v-170.664062h170.664062c11.777344 0 21.335938-9.558594 21.335938-21.335938 0-11.773437-9.558594-21.332031-21.335938-21.332031zm0 0\"\n});\n\nfunction SvgPlusMap(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"426.66667pt\",\n    viewBox: \"0 0 426.66667 426.66667\",\n    width: \"426.66667pt\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgPlusMap);\nexport default __webpack_public_path__ + \"static/media/plus_map.89fe7bf6.svg\";\nexport { ForwardRef as ReactComponent };","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"m405.332031 43h-384c-11.773437 0-21.332031-9.558594-21.332031-21.332031 0-11.777344 9.558594-21.335938 21.332031-21.335938h384c11.777344 0 21.335938 9.558594 21.335938 21.335938 0 11.773437-9.558594 21.332031-21.335938 21.332031zm0 0\"\n});\n\nfunction SvgMinusMap(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, [\"title\", \"titleId\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"426pt\",\n    viewBox: \"0 -192 426.66667 426\",\n    width: \"426pt\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _ref2);\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgMinusMap);\nexport default __webpack_public_path__ + \"static/media/minus_map.6eb8c621.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect } from 'react';\nimport country from 'world-map-country-shapes';\nimport Tooltip from './tooltip';\nimport Legend from './legend';\nimport { getColorsFromFilters } from '../../../services/calculations';\nimport {ReactComponent as Plus} from \"../../../icons/plus_map.svg\";\nimport {ReactComponent as Minus} from \"../../../icons/minus_map.svg\";\n\nimport './index.scss';\n\nconst Map = ({ summaries = [], handleClickOnCountry, globalFilters, updateFilters, handleOnMouseUp }) => {\n  const [selectedCountries, setSelectedCountries] = useState({});\n  const [customStyles, setStyle] = useState({ display: 'none' });\n  const [dataCountry, setDataCountry] = useState({});\n  const [scaleIndex, setScaleIndex] = useState(1);\n  const [legend, updateLegend] = useState([]);\n  const [diffCoeff, updateDiffCoeff] = useState([]);\n  const [mapPositionX, setMapPositionX] = useState(0);\n  const [diffX, setDiffX] = useState(0);\n  const [diffY, setDiffY] = useState(0);\n\n  const [mapPositionY, setMapPositionY] = useState(0);\n  const [isDragStart, setDragStart] = useState(0);\n  const [summariesAfterCalculation, updateSummaries] = useState([]);\n  const zoomIndex = 0.25;\n  const maxZoom = 8;\n\n  const showCountry = (e, country, covidDataForCountry) => {\n    setSelectedCountries({\n      [country.id]: !selectedCountries[country.id]\n    });\n\n    setStyle({\n      display: \"block\",\n      left: e.pageX + 1 + 'px',\n      top: e.pageY + 1 + 'px',\n    });\n\n    setDataCountry(covidDataForCountry);\n  };\n\n  const hideCountry = (country) => {\n    setStyle({\n      display: \"none\"\n    });\n\n    setSelectedCountries({\n      [country.id]: !selectedCountries[country.id]\n    });\n  };\n\n  const getFormatedCoefficient = (coefficient) => {\n    let formattedCoefficiend = parseFloat(coefficient.toFixed(1));\n    if (formattedCoefficiend > 1) formattedCoefficiend = 1;\n    if (isNaN(formattedCoefficiend)) formattedCoefficiend = 0;\n    if (formattedCoefficiend < 0.1) formattedCoefficiend = 0;\n\n    return formattedCoefficiend;\n  };\n\n  useEffect(() => {\n    const listOfCoef = new Set();\n    const temp = summaries.sort((el1, el2) => el1.Data > el2.Data ? 1 : -1);\n    const diffCoeff = (temp[temp.length-1].Data - temp[0].Data);\n    const summariesWithCoef = summaries.map(summaryForCountry => {\n      const coefficient = (summaryForCountry.Data - temp[0].Data) / diffCoeff;\n      if (getFormatedCoefficient(coefficient) > 0) {\n        listOfCoef.add(getFormatedCoefficient(coefficient));\n      }\n      return {\n        ...summaryForCountry,\n        coefficient: getFormatedCoefficient(coefficient)\n      }\n    });\n\n    updateSummaries(summariesWithCoef);\n    updateLegend([...listOfCoef]);\n    updateDiffCoeff(diffCoeff);\n  }, [summaries]);\n\n  const getColorForCountry = (countryID, covidDataForCountry) => {\n    if (covidDataForCountry.Country === globalFilters.geography) {\n       return 'green';\n    }\n\n    if (selectedCountries[countryID]) {\n      return \"#fde5bc\";\n    }\n    return `rgba(${getColorsFromFilters(globalFilters.status)},${covidDataForCountry.coefficient || 0.1})`;\n  };\n\n  const mapCountries = country.map(country => {\n    const covidDataForCountry = summariesAfterCalculation.find(summaryForCountry => summaryForCountry.CountryCode === country.id) || {};\n\n    return (\n      <path\n        key={country.id}\n        d={country.shape}\n        style={{\n          fill: getColorForCountry(country.id, covidDataForCountry),\n          cursor: \"pointer\",\n          stroke: \"#555\"\n        }}\n        onMouseOver={(evt) => showCountry(evt, country, covidDataForCountry)}\n        onMouseOut={() => hideCountry(country)}\n        onClick={() => handleClickOnCountry(covidDataForCountry.Country)}\n      >\n      </path>\n    )\n  });\n\n  const scaleMap = (newScaleParam) => {\n    if (newScaleParam > zoomIndex && newScaleParam < maxZoom) {\n      setScaleIndex(newScaleParam);\n    }\n  };\n\n  const handleMouseWeel = (e) => {\n    e.stopPropagation();\n    if (e.deltaY < 0) {\n      scaleMap(scaleIndex + zoomIndex);\n    } else {\n      scaleMap(scaleIndex - zoomIndex);\n    }\n  };\n\n  const handleMouseDown = (e) => {\n    e.stopPropagation();\n    setDragStart(true);\n    setMapPositionX(e.pageX - diffX * scaleIndex);\n    setMapPositionY(e.pageY - diffY * scaleIndex);\n  };\n\n  const handleMouseUp = (e) => {\n    e.stopPropagation();\n    setDragStart(false);\n  };\n\n  const handleMouseMove = (e) => {\n    e.stopPropagation();\n    if (isDragStart) {\n      setDiffX((e.pageX - mapPositionX) / scaleIndex);\n      setDiffY((e.pageY - mapPositionY) / scaleIndex);\n    }\n  };\n\n  return (\n    <>\n      <Tooltip customStyles={customStyles} dataCountry={dataCountry} globalFilters={globalFilters}/>\n      <div className='map-container' onWheel={handleMouseWeel}>\n        <div className=\"map-buttons\">\n          <button\n            onClick={() => scaleMap(scaleIndex - zoomIndex)}\n            disabled={scaleIndex === 2 * zoomIndex}\n            className='map-button'\n          >\n            <div><Minus className=\"\" style={{}} /></div>\n          </button>\n          <button\n            onClick={() => scaleMap(scaleIndex + zoomIndex)}\n            disabled={scaleIndex === maxZoom - zoomIndex}\n            className='map-button'\n          >\n            <div><Plus className=\"\" style={{}} /></div>\n          </button>\n        </div>\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          height=\"auto\"\n          width=\"auto\"\n          viewBox=\"0 0 2000 1001\"\n          style={{transform: `scale(${scaleIndex}) translate(${diffX}px, ${diffY}px`}}\n          className=\"map\"\n          onMouseDown={handleMouseDown}\n          onMouseUp={handleMouseUp}\n          onMouseMove={handleMouseMove}\n        >\n          {mapCountries}\n        </svg>\n      </div>\n\n      <Legend data={legend} diffCoeff={diffCoeff} globalFilters={globalFilters} updateFilters={updateFilters} handleOnMouseUp={handleOnMouseUp}/>\n    </>\n  )\n};\n\n\nexport default React.memo(Map);\n","import Map from './map';\n\nconst WorldMap = ({ summaries, handleClickOnCountry, globalFilters, updateFilters, handleOnMouseUp }) => {\n  return (\n    <div className=\"world-map-container\">\n      <Map summaries={summaries} handleClickOnCountry={handleClickOnCountry} globalFilters={globalFilters} updateFilters={updateFilters} handleOnMouseUp={handleOnMouseUp}/>\n    </div>\n  );\n};\n\nexport default WorldMap;\n","import React from 'react';\nimport { Chart } from 'react-google-charts';\nimport { format } from 'date-fns';\nimport { filters } from '../../../constants/filters';\nimport { getColorsFromFilters } from '../../../services/calculations';\n\nconst chartEvents = [\n  {\n    eventName: \"select\",\n    callback({chartWrapper}) {\n      console.log(\"Selected \", chartWrapper.getChart().getSelection());\n    }\n  }\n];\n\nconst prepereOptions = (data, statuses) => {\n  if(!data || data.length === 0) {\n    return {};\n  }\n\n  return {\n    title: '',\n    hAxis: {title: \"Days\", viewWindow: {min: 1, max: data.length}},\n    vAxis: {title: \"\", viewWindow: {min: 0, max: calculateMaxY(data)}},\n    legend: { position: 'top', maxLines: 3 },\n    colors: getColors(statuses),\n    chartArea: { marginleft: '4em', width: '75%', height: '70%' },\n    animation: {\n      duration: 600,\n      easing: 'out',\n      startup: true,\n    },\n  }\n};\n\nconst getColors = (statuses) => {\n  let colors = [];\n  statuses.forEach(status => {\n    colors.push(getColor(status));\n  });\n  return colors;\n};\n\nconst getColor = (status) => {\n  return `rgb(${getColorsFromFilters(status)})`;\n};\n\nconst calculateMaxY = (data) => {\n  if (!data.length) {\n    return;\n  }\n\n  return data.reduce((acc, curr) => acc.Data > curr.Data ? acc : curr);\n};\n\nconst prepereData = (data, status, compare) => {\n  let resultArr = [];\n  if (!data || !data.length || !Array.isArray(data)) {\n    return [];\n  }\n  if (compare) {\n    resultArr.push([\"Date\", \"Confirmed\", \"Recovered\", \"Deaths\"]);\n    data.forEach((el) => resultArr.push([format(new Date(el.Date), 'dd-MMM-yyyy'), el.TotalConfirmed, el.TotalRecovered, el.TotalDeaths]));\n  } else {\n    resultArr.push([\"Date\", \"Number of people\"]);\n    data.forEach((el) => resultArr.push([format(new Date(el.Date), 'dd-MMM-yyyy'), el[status]]));\n  }\n\n  return resultArr;\n};\n\nconst CovidChart = ({dataWorld, status, compare}) => {\n  const correctData = prepereData(dataWorld, status, compare);\n  const statuses = compare ? [filters.status.confirmed, filters.status.recovered, filters.status.deaths] : [status];\n  const correctOptions = prepereOptions(dataWorld, statuses);\n\n  return correctData.length ? (\n    <Chart\n      chartType=\"AreaChart\"\n      data={correctData}\n      options={correctOptions}\n      graphID=\"ScatterChart\"\n      className=\"chart\"\n      chartEvents={chartEvents}\n     />\n  ) : null;\n};\n\nexport default CovidChart;\n","import React, { useState } from 'react';\nimport Draggable from 'react-draggable';\nimport CovidChart from './chart';\n\nimport { ReactComponent as MinimizeIcon } from \"../../icons/small.svg\";\nimport { ReactComponent as MaximizeIcon } from \"../../icons/plus.svg\";\nimport { ReactComponent as Expand } from \"../../icons/expand.svg\";\n\nimport Filters from '../filters';\n\nconst Graph = ({ dataWorld, globalFilters, updateFilters, dataForCountry, handleOnMouseUp }) => {\n\n  const [expanded, setExpanded] = useState(false);\n  const [fullSize, setFullSize] = useState(true);\n  const [minimize, setMinimize] = useState(true);\n  const [maximize, setMaximize] = useState(false);\n\n  const [compare, setCompare] = useState(false);\n  const defaultPosition = { x: 0, y: 0 };\n\n\n  const handleToggleCompare = () => {\n    setCompare(!compare);\n  };\n\n  const onCheckChange = (e) => {\n    if (e.target.checked) {\n      updateFilters({ world: true });\n    } else {\n      updateFilters({ world: false });\n      if (dataForCountry && globalFilters.geography) {\n        dataForCountry(globalFilters.geography);\n      } else {\n        dataForCountry('Belarus');\n      }\n    }\n  };\n\n  const handleFullSize = () => {\n    setExpanded(!expanded);\n    setMinimize(!minimize);\n  };\n\n  const handleMinimize = () => {\n    setFullSize(!fullSize)\n    setMaximize(true)\n    setMinimize(false)\n\n  }\n\n  const handleMaximize = () => {\n    setFullSize(!fullSize)\n    setMaximize(false)\n    setMinimize(true)\n  }\n\n  const options = { 'status': true, 'relative': true };\n\n  return (\n    <Draggable position={expanded ? defaultPosition : null} onMouseDown={handleOnMouseUp}>\n      <div className={`graph-wrapper ${expanded ? 'expanded' : ''}`}>\n        <div className=\"controls\">\n          <div className=\"title\">Chart</div>\n\n          <MaximizeIcon className=\"controls-icons\" onClick={handleMaximize} style={{ display: maximize ? 'inline-block' : 'none' }} />\n\n          <MinimizeIcon className=\"controls-icons\" onClick={handleMinimize} style={{ display: minimize ? 'inline-block' : 'none' }} />\n\n          <Expand className=\"controls-icons\" onClick={handleFullSize} style={{ display: fullSize ? 'inline-block' : 'none' }} />\n\n        </div>\n        {\n          fullSize ? (\n            <div className=\"block-inner\">\n              <h4>{globalFilters.world ? 'World' : globalFilters.geography}</h4>\n              <div className=\"border-stroke\">\n                <div className=\"filters\">\n                  <Filters globalFilters={globalFilters} updateFilters={updateFilters} dataForCountry={dataForCountry} options={options} />\n                  <div className=\"adv-filters\">\n                    <div>\n                      <input\n                        type=\"checkbox\"\n                        name=\"world\"\n                        value=\"\"\n                        onChange={onCheckChange}\n                        checked={globalFilters.world === true}\n                      />\n                      <label htmlFor=\"world\">World</label>\n                    </div>\n                    <div>\n                      <input\n                        type=\"checkbox\"\n                        id=\"compare\"\n                        name=\"compare\"\n                        value=\"1\"\n                        onChange={handleToggleCompare}\n                      />\n                      <label htmlFor=\"compare\">Compare</label>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"chart-container\">\n                <CovidChart dataWorld={dataWorld} status={globalFilters.status} compare={compare} />\n              </div>\n            </div>\n          ) : null\n        }\n      </div>\n    </Draggable>\n  );\n};\n\nexport default React.memo(Graph);\n","import React, { useState, useEffect } from 'react';\nimport ClockLoader from \"react-spinners/ClockLoader\";\nimport { getSummaries, getDataWorldFromDays, getDataCountryFromDays } from '../../api/covid';\nimport { getFlags } from \"../../api/flags\";\nimport { filters } from \"../../constants/filters\";\nimport Summary from '../summary';\nimport CountryList from '../countryList';\nimport WorldMap from '../worldMap';\nimport Graph from '../graph';\nimport { getData, getDataCountries } from '../../services/calculations';\nimport { missedPopulations, missedFlags } from '../../constants/missed';\nimport '../../styles/main.scss';\n\nconst Root = () => {\n  const [summaries, setSummaries] = useState({});\n  const [flags, setFlags] = useState([]);\n  const [dataWorldFromDays, setDataWorld] = useState([]);\n  const [dataCountryFromDays, setDataCountry] = useState([]);\n  const [dataAll, setDataAll] = useState([]);\n  const [dataMap, setDataMap] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState('');\n\n  const [indicatorsForFilter, updateIndicators] = useState({\n    status: filters.status.confirmed,\n    period: filters.period.all,\n    relative: filters.relative.absolute,\n    geography: filters.geography,\n    world: filters.world,\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const flagsResult = await getFlags();\n        const summariesResult = await getSummaries();\n        const dataWorldFromDaysResult = await getDataWorldFromDays();\n\n        summariesResult.Countries = summariesResult.Countries.map(country => {\n          return {\n            ...country,\n            population: missedPopulations[country.Country] || flagsResult.find(flag => flag.name === country.Country).population,\n            flag: missedFlags[country.Country] || flagsResult.find(flag => flag.name === country.Country).flag,\n          }\n        });\n\n        setSummaries(summariesResult);\n        setDataWorld(dataWorldFromDaysResult);\n        setFlags(flagsResult);\n        setIsLoaded(true);\n      } catch (error) {\n        setError('API is not available. Could you please refresh page or try a bit later.');\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    if (indicatorsForFilter.world) {\n      setDataAll(getData(dataWorldFromDays, indicatorsForFilter));\n    } else if (indicatorsForFilter.geography) {\n      const country = indicatorsForFilter.geography;\n      const population = missedPopulations[country] || flags.find(flag => flag.name === country).population;\n      setDataAll(getData(dataCountryFromDays, indicatorsForFilter, population));\n    }\n    //для карты\n    setDataMap(getDataCountries(summaries.Countries, indicatorsForFilter));\n  }, [indicatorsForFilter, summaries, dataWorldFromDays, dataCountryFromDays, flags]);\n\n  const updateFilter = (newFilterParams) => {\n    updateIndicators({\n      ...indicatorsForFilter,\n      ...newFilterParams\n    });\n  };\n\n  const getDataForCountry = async (country) => {\n    //Тут уже страна выбрана\n    updateIndicators({\n      ...indicatorsForFilter,\n      geography: country,\n      world: false\n    });\n\n    const dataCountryFromDaysResult = await getDataCountryFromDays(country);\n    setDataCountry(dataCountryFromDaysResult);\n  };\n\n  const changeZIndex = (e) => {\n    document.querySelectorAll('.react-draggable').forEach(el => {\n      el.style.zIndex = \"2\";\n    });\n    e.target.closest('.react-draggable').style.zIndex = \"6000\";\n  };\n\n  return (\n    <div className=\"main-container\">\n      {\n        !isLoaded ? (\n          <div className=\"main-loader\">\n            <ClockLoader\n              size={100}\n              color={\"#ff3440\"}\n              loading={!isLoaded}\n            />\n            {error}\n          </div>\n        ) : (\n            <>\n              <CountryList\n                summaries={summaries.Countries}\n                flags={flags}\n                globalFilters={indicatorsForFilter}\n                updateFilters={updateFilter}\n                handleClickOnCountry={getDataForCountry}\n                handleOnMouseUp={changeZIndex}\n              />\n              <Summary\n                summaries={summaries.Global}\n                summariesCountries={summaries.Countries}\n                globalFilters={indicatorsForFilter}\n                updateFilters={updateFilter}\n                handleOnMouseUp={changeZIndex}\n              />\n              <WorldMap\n                summaries={dataMap}\n                globalFilters={indicatorsForFilter}\n                handleClickOnCountry={getDataForCountry}\n                updateFilters={updateFilter}\n                handleOnMouseUp={changeZIndex}\n              />\n              <Graph dataWorld={dataAll}\n                globalFilters={indicatorsForFilter}\n                updateFilters={updateFilter}\n                dataForCountry={getDataForCountry}\n                handleOnMouseUp={changeZIndex}\n              />\n            </>\n          )\n      }\n    </div>\n  );\n};\n\nexport default Root;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Root from './components/root';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}